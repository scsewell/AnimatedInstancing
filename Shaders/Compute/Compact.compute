#include "HLSLSupport.cginc"
#include "../InstancingCore.hlsl"

#pragma kernel CSMain

StructuredBuffer<InstanceData> _InstanceData;
StructuredBuffer<uint> _SortKeys;

RWStructuredBuffer<InstanceProperties> _InstanceProperties;

[numthreads(64, 1, 1)]
void CSMain(uint tID : SV_DispatchThreadID, uint groupID : SV_GroupID)
{
    // scatter instance data based on the index determined by the sort
    uint sortKey = tID < (_PassCount * _InstanceCount) ? _SortKeys[tID] : ANIMATION_INSTANCING_NULL_SORT_KEY;

    if (sortKey != ANIMATION_INSTANCING_NULL_SORT_KEY)
    {
        uint instanceIndex = GetInstanceIndexFromSortingKey(sortKey);
        InstanceData data = _InstanceData[instanceIndex];
        
        float4x4 model = TransformToMatrix(DecompressTransform(data.transform));

        InstanceProperties properties;
        properties.model = model;
        properties.modelInv =  InvertMatrix(model);
        properties.animationIndex = data.animationIndex;
        properties.animationTime = data.animationTime;
        
        _InstanceProperties[tID] = properties;
    }
}
